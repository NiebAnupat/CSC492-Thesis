// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DentalClinicServer.Models;

[Table("Clinic")]
public partial class Clinic
{
    [Key]
    [Column(TypeName = "character varying")]
    public string ClinicId { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string ClinicNameInThai { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string ClinicNameInEnglish { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string Initial { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string? LogoFileName { get; set; }

    [Column(TypeName = "character varying")]
    public string OwnerCustomerId { get; set; } = null!;

    [StringLength(10)]
    public string Telephone { get; set; } = null!;

    public string AddressLine1 { get; set; } = null!;

    public string? AddressLine2 { get; set; }

    public int ProvinceId { get; set; }

    public int DistrictId { get; set; }

    public int SubDistrictId { get; set; }

    /// <summary>
    /// Create date
    /// </summary>
    [Column(TypeName = "timestamp with time zone")]
    public DateTime CreatedAt { get; set; }

    /// <summary>
    /// Update date
    /// </summary>
    [Column(TypeName = "timestamp with time zone")]
    public DateTime UpdatedAt { get; set; }

    [Column(TypeName = "character varying")]
    public string? UpdatedByCustomerId { get; set; }

    public bool IsActive { get; set; }

    [InverseProperty("Clinic")]
    public virtual ICollection<Branch> Branches { get; set; } = new List<Branch>();

    [ForeignKey("OwnerCustomerId")]
    [InverseProperty("ClinicOwnerCustomers")]
    public virtual Customer OwnerCustomer { get; set; } = null!;

    [ForeignKey("UpdatedByCustomerId")]
    [InverseProperty("ClinicUpdatedByCustomers")]
    public virtual Customer? UpdatedByCustomer { get; set; }
}
