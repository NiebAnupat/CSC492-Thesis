// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DentalClinicServer.Models;

[Table("Customer")]
public partial class Customer
{
    [Key]
    [Column(TypeName = "character varying")]
    public string CustomerId { get; set; } = null!;

    public int ProviderTypeId { get; set; }

    [Column(TypeName = "character varying")]
    public string? CustomerProviderId { get; set; }

    [Column(TypeName = "character varying")]
    public string Email { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string Password { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string? Nationality { get; set; }

    [StringLength(13)]
    public string? CitizenId { get; set; }

    public int GenderId { get; set; }

    [Column(TypeName = "character varying")]
    public string Prefix { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string FirstName { get; set; } = null!;

    [Column(TypeName = "character varying")]
    public string LastName { get; set; } = null!;

    [StringLength(10)]
    public string Telephone { get; set; } = null!;

    public string AddressLine1 { get; set; } = null!;

    public string? AddressLine2 { get; set; }

    public int ProvinceId { get; set; }

    public int DistrictId { get; set; }

    public int SubDistrictId { get; set; }

    /// <summary>
    /// Create date
    /// </summary>
    [Column(TypeName = "timestamp without time zone")]
    public DateTime CreatedAt { get; set; }

    /// <summary>
    /// Update date
    /// </summary>
    [Column(TypeName = "timestamp without time zone")]
    public DateTime UpdatedAt { get; set; }

    public bool IsActive { get; set; }

    [InverseProperty("CreatedByUser")]
    public virtual ICollection<AuditLog> AuditLogs { get; set; } = new List<AuditLog>();

    [InverseProperty("UpdatedByCustomer")]
    public virtual ICollection<Branch> Branches { get; set; } = new List<Branch>();

    [InverseProperty("OwnerCustomer")]
    public virtual ICollection<Clinic> ClinicOwnerCustomers { get; set; } = new List<Clinic>();

    [InverseProperty("UpdatedByCustomer")]
    public virtual ICollection<Clinic> ClinicUpdatedByCustomers { get; set; } = new List<Clinic>();

    [InverseProperty("Customer")]
    public virtual ICollection<CustomerSubscription> CustomerSubscriptions { get; set; } = new List<CustomerSubscription>();

    [ForeignKey("GenderId")]
    [InverseProperty("Customers")]
    public virtual Gender Gender { get; set; } = null!;

    [ForeignKey("ProviderTypeId")]
    [InverseProperty("Customers")]
    public virtual ProviderType ProviderType { get; set; } = null!;

    [InverseProperty("CreatedByUser")]
    public virtual ICollection<TreatmentDocument> TreatmentDocumentCreatedByUsers { get; set; } = new List<TreatmentDocument>();

    [InverseProperty("UpdatedByUser")]
    public virtual ICollection<TreatmentDocument> TreatmentDocumentUpdatedByUsers { get; set; } = new List<TreatmentDocument>();
}